apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
  namespace: argo
data:
  # Parallelism limits the max total parallel workflows that can execute at the same time
  # (available since Argo v2.3). Controller must be restarted to take effect.
  parallelism: "5"

  # Limit the maximum number of incomplete workflows in a namespace.
  # Intended for cluster installs that are multi-tenancy environments, to prevent too many workflows in one
  # namespace impacting others.
  # >= v3.2
  namespaceParallelism: "100"

  # Globally limits the rate at which pods are created.
  # This is intended to mitigate flooding of the Kubernetes API server by workflows with a large amount of
  # parallel nodes.
  resourceRateLimit: |
    limit: 200
    burst: 100

  workflowDefaults: |
    metadata:
      labels:
        workflows.cilresearch.org/project: cilresearch
    spec:
      serviceAccountName: workflow
      executor:
        serviceAccountName: workflow
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      automountServiceAccountToken: false
      parallelism: 300
      activeDeadlineSeconds: 604800  #; Workflows must finish in 7 days.
      ttlStrategy:
        secondsAfterCompletion: 600   #; Workflows delete after 10 minutes.
      podGC:
        strategy: OnPodCompletion
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "worker"
        effect: "NoSchedule"
      - key: "preemptible"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
                - key: iam.gke.io/gke-metadata-server-enabled
                  operator: In
                  values:
                    - "true"
  mainContainer: |
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 500m
        memory: 128Mi
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
  executor: |
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 500m
        memory: 1Gi
    securityContext:
      runAsNonRoot: true
      runAsUser: 8737
      runAsGroup: 8737
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL

  artifactRepository: |
    archiveLogs: true
    gcs:
      bucket: impactlab-data-scratch
      keyFormat: "{{workflow.uid}}/{{pod.name}}"

  persistence: |
    connectionPool:
      maxIdleConns: 100
      maxOpenConns: 0
      connMaxLifetime: 300s # 0 means connections don't have a max lifetime
    #  if true node status is only saved to the persistence DB to avoid the 1MB limit in etcd
    nodeStatusOffLoad: true
    # save completed workloads to the workflow archive
    archive: true
    # the number of days to keep archived workflows (the default is forever)
    archiveTTL: 730d
    # skip database migration if needed.
    # skipMigration: true
    # LabelSelector determines the workflow that matches with the matchlabels or matchrequirements, will be archived.
    # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    # archiveLabelSelector:
    #   matchLabels:
    #     workflows.argoproj.io/archive-strategy: "always"
    # Optional name of the cluster I'm running in. This must be unique for your cluster.
    clusterName: cilresearch
    postgresql:
      host: 10.236.0.3
      port: 5432
      database: postgres
      tableName: argo_workflows
      # the database secrets must be in the same namespace of the controller
      userNameSecret:
        name: argo-postgres-config
        key: username
      passwordSecret:
        name: argo-postgres-config
        key: password
      ssl: true
      # sslMode must be one of: disable, require, verify-ca, verify-full
      # you can find more information about those ssl options here: https://godoc.org/github.com/lib/pq
      sslMode: require

  sso: |
    # This is the root URL of the OIDC provider (required).
    issuer: https://cd.cilresearch.org/api/dex
    # This is name of the secret and the key in it that contain OIDC client
    # ID issued to the application by the provider (required).
    clientId:
      name: argo-workflows-sso
      key: client-id
    # This is name of the secret and the key in it that contain OIDC client
    # secret issued to the application by the provider (required).
    clientSecret:
      name: argo-workflows-sso
      key: client-secret
    # This is the redirect URL supplied to the provider (required). It must
    # be in the form <argo-server-root-url>/oauth2/callback. It must be
    # browser-accessible.
    redirectUrl: https://workflows.cilresearch.org/oauth2/callback
    scopes:
    - groups
    - email
    rbac:
      enabled: true

  links: |
    - name: GCP Workflow Logs
      scope: workflow
      url: https://console.cloud.google.com/logs/query;query=resource.type%3D%22k8s_container%22%0Aresource.labels.project_id%3D%22cilresearch%22%0Aresource.labels.namespace_name%3D%22${metadata.namespace}%22%0Alabels.%22k8s-pod%2Fworkflows_argoproj_io%2Fworkflow%22%3D%22${metadata.name}%22;timeRange=${status.startedAt}%2F${status.finishedAt}?project=cilresearch
    - name: GCP Pod Logs
      scope: pod
      url: https://console.cloud.google.com/logs/query;query=resource.type%3D%22k8s_container%22%0Aresource.labels.project_id%3D%22cilresearch%22%0Aresource.labels.namespace_name%3D%22${metadata.namespace}%22%0Aresource.labels.pod_name%3D%22${metadata.name}%22;timeRange=${status.startedAt}%2F${status.finishedAt}?project=cilresearch
    - name: GCP Pod Logs
      scope: pod-logs
      url: https://console.cloud.google.com/logs/query;query=resource.type%3D%22k8s_container%22%0Aresource.labels.project_id%3D%22cilresearch%22%0Aresource.labels.namespace_name%3D%22${metadata.namespace}%22%0Aresource.labels.pod_name%3D%22${metadata.name}%22;timeRange=${status.startedAt}%2F${status.finishedAt}?project=cilresearch
